-- Load external library for GUI
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()

-- Initialize UserInputService
local UserInputService = game:GetService("UserInputService")

-- Check if the platform is mobile
local isMobile = UserInputService.TouchEnabled

local whitelist = {
    ["erickthesad"] = true,  -- Example username
    ["bshdgdg4"] = true,  -- Example username
    ["mymanuaintwinning"] = true,  -- Add more usernames as needed
    ["g6ana"] = true,
    ["490sl"] = true,
    ["22altLOL"] = true
}

-- Get the local player
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

-- Check if the local player is whitelisted
if not whitelist[localPlayer.Name] then
    localPlayer:Kick("You are not whitelisted to use this script.")
    return
end

-- Create a customizable GUI window
local Window = OrionLib:MakeWindow({
    Name = "Legend Battlegrounds - Made by SynosLucky",
    HidePremium = false,
    IntroEnabled = false,
    IntroText = "Welcome to Legend Battlegrounds Script!",
    SaveConfig = true,
    ConfigFolder = "LegendBattlegroundsScript",
    Drag = not isMobile,  -- Disable dragging on mobile devices
    Transparency = 0.6  -- Set transparency to 60%
})

-- Track state of actions
local forceState = {
    ForcePunch = false,
    ForceBlock = false,
    ForceAwaken = false,
    ForceRightDash = false,
    ForceLeftDash = false,
    ForceForwardDash = false,
    ForceBackDash = false
}

-- List of whitelisted players
local whitelistedPlayers = {}

-- Function to notify the user
local function notify(actionName, state)
    local stateText = state and "activated" or "deactivated"
    OrionLib:MakeNotification({
        Name = actionName,
        Content = "Force " .. actionName .. " is now " .. stateText,
        Time = 5
    })
end

-- Function to toggle actions
local function toggleForceAction(actionName, callback)
    local active = forceState[actionName]
    forceState[actionName] = not active
    notify(actionName, not active)
    if not active then
        pcall(callback)
    end
end

-- Function to check if a player is whitelisted
local function isWhitelisted(playerName)
    for _, name in ipairs(whitelistedPlayers) do
        if name == playerName then
            return true
        end
    end
    return false
end

-- Create ForcePunch tab
local ForcePunchTab = Window:MakeTab({
    Name = "Force Punch üí•",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
    BorderColor = Color3.fromRGB(255, 0, 0)  -- Red border
})

-- Force Punch button
ForcePunchTab:AddButton({
    Name = "Activate Force Punch",
    Callback = function()
        toggleForceAction("ForcePunch", function()
            local players = game:GetService("Players")
            local localPlayer = players.LocalPlayer
            while forceState.ForcePunch do
                for _, player in ipairs(players:GetPlayers()) do
                    if player ~= localPlayer and player.Character and not isWhitelisted(player.Name) then
                        local args = {
                            [1] = {
                                ["Request"] = "M1Down"
                            }
                        }
                        pcall(function()
                            player.Character.Network:FireServer(unpack(args))
                        end)
                    end
                end
                wait(0.1)  -- Shortened wait time to reduce load
            end
        end)
    end
})

-- Create ForceBlock tab
local ForceBlockTab = Window:MakeTab({
    Name = "Force Block üõ°Ô∏è",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
    BorderColor = Color3.fromRGB(255, 0, 0)  -- Red border
})

-- Force Block button
ForceBlockTab:AddButton({
    Name = "Activate Force Block",
    Callback = function()
        toggleForceAction("ForceBlock", function()
            local players = game:GetService("Players")
            local localPlayer = players.LocalPlayer
            local range = 15000
            while forceState.ForceBlock do
                for _, player in ipairs(players:GetPlayers()) do
                    if player ~= localPlayer and player.Character and localPlayer.Character and not isWhitelisted(player.Name) then
                        local localCharacter = localPlayer.Character
                        local targetCharacter = player.Character
                        if localCharacter:FindFirstChild("HumanoidRootPart") and targetCharacter:FindFirstChild("HumanoidRootPart") then
                            local distance = (localCharacter.HumanoidRootPart.Position - targetCharacter.HumanoidRootPart.Position).Magnitude
                            if distance <= range then
                                local args = {
                                    [1] = {
                                        ["Request"] = "FDown"
                                    }
                                }
                                pcall(function()
                                    targetCharacter.Network:FireServer(unpack(args))
                                end)
                            end
                        end
                    end
                end
                wait(0.1)  -- Shortened wait time to reduce load
            end
        end)
    end
})

-- Create ForceAwaken tab
local ForceAwakenTab = Window:MakeTab({
    Name = "Force Awaken üåü",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
    BorderColor = Color3.fromRGB(255, 0, 0)  -- Red border
})

ForceAwakenTab:AddLabel("only forces players that has full awaken")

-- Force Awaken button
ForceAwakenTab:AddButton({
    Name = "Activate Force Awaken",
    Callback = function()
        toggleForceAction("ForceAwaken", function()
            local players = game:GetService("Players")
            local localPlayer = players.LocalPlayer
            while forceState.ForceAwaken do
                for _, player in ipairs(players:GetPlayers()) do
                    if player ~= localPlayer and player.Character and not isWhitelisted(player.Name) then
                        local args = {
                            [1] = {
                                ["Request"] = "Awaken"
                            }
                        }
                        pcall(function()
                            player.Character.Network:FireServer(unpack(args))
                        end)
                    end
                end
                wait(0.1)  -- Shortened wait time to reduce load
            end
        end)
    end
})

-- Create ForceSkills tab
local ForceSkillsTab = Window:MakeTab({
    Name = "Force Skills ‚öîÔ∏è",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
    BorderColor = Color3.fromRGB(255, 0, 0)  -- Red border
})

-- Force Dragon Rush button
ForceSkillsTab:AddButton({
    Name = "Activate Force Dragon Rush",
    Callback = function()
        toggleForceAction("ForceDragonRush", function()
            local players = game:GetService("Players")
            local localPlayer = players.LocalPlayer
            while forceState.ForceDragonRush do
                for _, player in ipairs(players:GetPlayers()) do
                    if player ~= localPlayer and not isWhitelisted(player.Name) then
                        local args = {
                            [1] = {
                                ["Number"] = "1",
                                ["Request"] = "Skill"
                            }
                        }
                        pcall(function()
                            player.Character.Network:FireServer(unpack(args))
                        end)
                    end
                end
                wait(0.1)  -- Shortened wait time to reduce load
            end
        end)
    end
})

-- Force Tiger Palm button
ForceSkillsTab:AddButton({
    Name = "Activate Force Tiger Palm",
    Callback = function()
        toggleForceAction("ForceTigerPalm", function()
            local players = game:GetService("Players")
            local localPlayer = players.LocalPlayer
            while forceState.ForceTigerPalm do
                for _, player in ipairs(players:GetPlayers()) do
                    if player ~= localPlayer and not isWhitelisted(player.Name) then
                        local args = {
                            [1] = {
                                ["Number"] = "2",
                                ["Request"] = "Skill"
                            }
                        }
                        pcall(function()
                            player.Character.Network:FireServer(unpack(args))
                        end)
                    end
                end
                wait(0.1)  -- Shortened wait time to reduce load
            end
        end)
    end
})

-- Force Panther Combo button
ForceSkillsTab:AddButton({
    Name = "Activate Force Panther Combo",
    Callback = function()
        toggleForceAction("ForcePantherCombo", function()
            local players = game:GetService("Players")
            local localPlayer = players.LocalPlayer
            while forceState.ForcePantherCombo do
                for _, player in ipairs(players:GetPlayers()) do
                    if player ~= localPlayer and not isWhitelisted(player.Name) then
                        local args = {
                            [1] = {
                                ["Number"] = "3",
                                ["Request"] = "Skill"
                            }
                        }
                        pcall(function()
                            player.Character.Network:FireServer(unpack(args))
                        end)
                    end
                end
                wait(0.1)  -- Shortened wait time to reduce load
            end
        end)
    end
})

-- Force Triple Kick Counter button
ForceSkillsTab:AddButton({
    Name = "Activate Force Triple Kick Counter",
    Callback = function()
        toggleForceAction("ForceTripleKickCounter", function()
            local players = game:GetService("Players")
            local localPlayer = players.LocalPlayer
            while forceState.ForceTripleKickCounter do
                for _, player in ipairs(players:GetPlayers()) do
                    if player ~= localPlayer and not isWhitelisted(player.Name) then
                        local args = {
                            [1] = {
                                ["Number"] = "4",
                                ["Request"] = "Skill"
                            }
                        }
                        pcall(function()
                            player.Character.Network:FireServer(unpack(args))
                        end)
                    end
                end
                wait(0.1)  -- Shortened wait time to reduce load
            end
        end)
    end
})

-- Create ForceDash tab
local ForceDashTab = Window:MakeTab({
    Name = "Force Dash üöÄ",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
    BorderColor = Color3.fromRGB(255, 0, 0)  -- Red border
})

-- Force Right Dash button
ForceDashTab:AddButton({
    Name = "Activate Force Right Dash",
    Callback = function()
        toggleForceAction("ForceRightDash", function()
            local players = game:GetService("Players")
            local localPlayer = players.LocalPlayer
            while forceState.ForceRightDash do
                for _, player in ipairs(players:GetPlayers()) do
                    if player ~= localPlayer and player.Character and not isWhitelisted(player.Name) then
                        local args = {
                            [1] = {
                                ["Request"] = "RightDash"
                            }
                        }
                        pcall(function()
                            player.Character.Network:FireServer(unpack(args))
                        end)
                    end
                end
                wait(0.1)  -- Shortened wait time to reduce load
            end
        end)
    end
})

-- Force Left Dash button
ForceDashTab:AddButton({
    Name = "Activate Force Left Dash",
    Callback = function()
        toggleForceAction("ForceLeftDash", function()
            local players = game:GetService("Players")
            local localPlayer = players.LocalPlayer
            while forceState.ForceLeftDash do
                for _, player in ipairs(players:GetPlayers()) do
                    if player ~= localPlayer and player.Character and not isWhitelisted(player.Name) then
                        local args = {
                            [1] = {
                                ["Request"] = "LeftDash"
                            }
                        }
                        pcall(function()
                            player.Character.Network:FireServer(unpack(args))
                        end)
                    end
                end
                wait(0.1)  -- Shortened wait time to reduce load
            end
        end)
    end
})

-- Force Forward Dash button
ForceDashTab:AddButton({
    Name = "Activate Force Forward Dash",
    Callback = function()
        toggleForceAction("ForceForwardDash", function()
            local players = game:GetService("Players")
            local localPlayer = players.LocalPlayer
            while forceState.ForceForwardDash do
                for _, player in ipairs(players:GetPlayers()) do
                    if player ~= localPlayer and player.Character and not isWhitelisted(player.Name) then
                        local args = {
                            [1] = {
                                ["Request"] = "ForwardDash"
                            }
                        }
                        pcall(function()
                            player.Character.Network:FireServer(unpack(args))
                        end)
                    end
                end
                wait(0.1)  -- Shortened wait time to reduce load
            end
        end)
    end
})

-- Force Back Dash button
ForceDashTab:AddButton({
    Name = "Activate Force Back Dash",
    Callback = function()
        toggleForceAction("ForceBackDash", function()
            local players = game:GetService("Players")
            local localPlayer = players.LocalPlayer
            while forceState.ForceBackDash do
                for _, player in ipairs(players:GetPlayers()) do
                    if player ~= localPlayer and player.Character and not isWhitelisted(player.Name) then
                        local args = {
                            [1] = {
                                ["Request"] = "BackDash"
                            }
                        }
                        pcall(function()
                            player.Character.Network:FireServer(unpack(args))
                        end)
                    end
                end
                wait(0.1)  -- Shortened wait time to reduce load
            end
        end)
    end
})

-- Create Whitelist tab
local WhitelistTab = Window:MakeTab({
    Name = "Whitelist üë•",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
    BorderColor = Color3.fromRGB(255, 0, 0)  -- Red border
})

-- Whitelist textbox
WhitelistTab:AddTextbox({
    Name = "Enter Player Name to Whitelist",
    Default = "",
    TextDisappear = true,
    Callback = function(text)
        local playerName = text
        if playerName and playerName ~= "" then
            if not isWhitelisted(playerName) then
                table.insert(whitelistedPlayers, playerName)
                OrionLib:MakeNotification({
                    Name = "Player Whitelisted",
                    Content = playerName .. " has been whitelisted.",
                    Time = 5
                })
            end
        end
    end
})

-- Unwhitelist textbox
WhitelistTab:AddTextbox({
    Name = "Enter Player Name to Unwhitelist",
    Default = "",
    TextDisappear = true,
    Callback = function(text)
        local playerName = text
        if playerName and playerName ~= "" then
            for i, name in ipairs(whitelistedPlayers) do
                if name == playerName then
                    table.remove(whitelistedPlayers, i)
                    OrionLib:MakeNotification({
                        Name = "Player Unwhitelisted",
                        Content = playerName .. " has been removed from the whitelist.",
                        Time = 5
                    })
                    break
                end
            end
        end
    end
})

-- Create Misc tab
local MiscTab = Window:MakeTab({
    Name = "Misc üí•",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
    BorderColor = Color3.fromRGB(128, 128, 128)  -- Gray border
})

-- Add Universal Scripts label
MiscTab:AddLabel("Universal Scripts")

-- Add Inf Yield script button
MiscTab:AddButton({
    Name = "Load Inf Yield",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Inf-yeild-New-Version-1836"))()
    end
})

-- Add Nameless Admin script button
MiscTab:AddButton({
    Name = "Load Nameless Admin",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Nameless-Admin-Official-15022"))()
    end
})

-- Add Remote Spy script button
MiscTab:AddButton({
    Name = "Load Remote Spy",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Just-A-Script-Rewrite-12363"))()
    end
})

-- Add Fly Mobile script button
MiscTab:AddButton({
    Name = "Load Fly Mobile",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-FLY-GUI-V3-8031"))()
    end
})

-- Create Color Changer tab
local ColorChangerTab = Window:MakeTab({
    Name = "Color Changer üé®",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
    BorderColor = Color3.fromRGB(0, 0, 255)  -- Blue border
})

ColorChangerTab:AddLabel("Doesn't work on mobile, only on PC")

-- Add color picker
local colorPicker = ColorChangerTab:AddColorpicker({
    Name = "Colorpicker",
    Default = Color3.fromRGB(255, 255, 255),  -- Default to white
    Callback = function(Value)
        print(Value)
    end
})

-- Set the color picker to white initially
colorPicker:Set(Color3.fromRGB(255, 255, 255))

local textChatService = game:GetService("TextChatService")
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local scriptOwners = {"l8rwannabebacon", "whitey_plays"}  -- List of script owners
local scriptUserName = localPlayer.Name  -- The name of the script user

textChatService.OnIncomingMessage = function(message)
    local properties = Instance.new("TextChatMessageProperties")

    if message.TextSource then
        local player = players:GetPlayerByUserId(message.TextSource.UserId)

        if player then
            if table.find(scriptOwners, player.Name) then
                properties.PrefixText = "<font color='#00ffee'>[Script Owner]</font> " .. "<font color='#ff8400'>[W Rizz]</font> " .. message.PrefixText
            elseif player.Name == scriptUserName then
                properties.PrefixText = "<font color='#ff0000'>[Script User]</font> " .. message.PrefixText
            else
                properties.PrefixText = message.PrefixText  -- Preserve default prefix text if no conditions are met
            end
        else
            properties.PrefixText = message.PrefixText  -- Preserve default prefix text if player is not found
        end
    else
        properties.PrefixText = message.PrefixText  -- Preserve default prefix text if no TextSource
    end

    return properties
end

-- Apply OrionLib settings
OrionLib:Init()
